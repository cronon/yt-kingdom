Where to store the state and logic: on node or client part?
People on the internet said different things about whether the logic should be on back or front part. Let it stay on frontend part, it'll be easier.


where does electron store credentials?
https://www.electronjs.org/docs/latest/api/safe-storage
https://auth0.com/blog/securing-electron-applications-with-openid-connect-and-oauth-2/
Auth0 recommends using keytar package

const os = require('os')
const keytar = require('keytar');
const keytarService = 'electron-openid-oauth';
const keytarAccount = os.userInfo().username;
await keytar.setPassword(keytarService, keytarAccount, 'sdfsdfsdf12312');
const refreshToken = await keytar.getPassword(keytarService, keytarAccount);



Connect to ffmpeg
```js
const {default: shellExec} = require('shell-exec');

var pathToFfmpeg =  require('ffmpeg-static-electron').path;
var pathToProbe =  require('ffprobe-static-electron').path;
console.log(pathToFfmpeg);
console.log(pathToProbe);

shellExec(pathToFfmpeg + ' --version').then(console.log).catch(console.error)
```


YT POC upload video
	https://github.com/googleapis/google-api-nodejs-client/tree/main/samples/youtube
	authenticate user with OAuth 2.0

WBS

build an exe file
 with electron-build library
 "electron-builder build --win portable"
 updates can be uploaded to github and the app can download them automatically
